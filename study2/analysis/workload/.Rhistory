setwd("/Applications/XAMPP/htdocs/htdocs/thesis_stuff/study2/analysis/balance")
data <- as.data.frame(t(t(read.csv("balance_raw.csv"))))
# first compare against a flat distribution
out <- list()
for(i in c(1:nrow (data))) {
out[i] <- as.double((chisq.test(data[i,c(-1,-2)], rescale.p=FALSE))[3])
}
data$x <- 1:40
for(i  in c(1:nrow(data))) {
data$x[i] <- as.double(out[i][1])
}
write.csv(data, file = "out.csv")
# Now do the mean ones
dat2a <- as.data.frame(t(t(read.csv("balance_raw.csv"))))
means <- colMeans(data2)
means <- means[-1]
means <- means[-1]
out <- list()
for(i in c(1:nrow (data))) {
out[i] <- as.double((chisq.test(data2[i,c(-1,-2)], means, rescale.p=TRUE))[3])
}
data2$x <- 1:40
for(i  in c(1:nrow(data2))) {
data2$x[i] <- as.double(out[i][1])
}
write.csv(data2, file = "out_mean.csv")
setwd("/Applications/XAMPP/htdocs/htdocs/thesis_stuff/study2/analysis/balance")
data <- as.data.frame(t(t(read.csv("balance_raw.csv"))))
# first compare against a flat distribution
out <- list()
for(i in c(1:nrow (data))) {
out[i] <- as.double((chisq.test(data[i,c(-1,-2)], rescale.p=FALSE))[3])
}
data$x <- 1:40
for(i  in c(1:nrow(data))) {
data$x[i] <- as.double(out[i][1])
}
write.csv(data, file = "out.csv")
# Now do the mean ones
data2 <- as.data.frame(t(t(read.csv("balance_raw.csv"))))
means <- colMeans(data2)
means <- means[-1]
means <- means[-1]
out <- list()
for(i in c(1:nrow (data))) {
out[i] <- as.double((chisq.test(data2[i,c(-1,-2)], means, rescale.p=TRUE))[3])
}
data2$x <- 1:40
for(i  in c(1:nrow(data2))) {
data2$x[i] <- as.double(out[i][1])
}
write.csv(data2, file = "out_mean.csv")
# And now the collated means
collated2 <- as.data.frame(t(t(read.csv("balance_collated.csv"))))
collatedMeans <- colMeans(collated2)
collatedMeans <- collatedMeans[-1]
collatedMeans <- collatedMeans[-1]
out <- list()
for(i in c(1:nrow (collated2))) {
out[i] <- as.double((chisq.test(collated2[i,c(-1,-2)], collatedMeans, rescale.p=TRUE))[3])
}
collated2$x <- 1:40
for(i  in c(1:nrow(collated2))) {
collated2$x[i] <- as.double(out[i][1])
}
write.csv(collated2, file = "collated_mean_out.csv")
collated <- as.data.frame(t(t(read.csv("balance_collated.csv"))))
out <- list()
for(i in c(1:nrow (collated))) {
out[i] <- as.double((chisq.test(collated[i,c(-1,-2)], rescale.p=TRUE))[3])
}
collated$x <- 1:40
for(i  in c(1:nrow(collated))) {
collated$x[i] <- as.double(out[i][1])
}
write.csv(collated, file = "collated_out.csv")
library(psych)
library(ctv)
library(ggplot2)
library(boot)
library(reshape)
Molten <- melt(collated, id.vars = "condition")
library(reshape)
install.packages("reshape")
library(reshape)
Molten <- melt(collated, id.vars = "condition")
ggplot(Molten, aes(x = time, y = value, colour = variable)) + geom_line()
Molten <- melt(collated, id=c("participant","condition"))
collated <- as.data.frame(t(t(read.csv("balance_collated.csv"))))
Molten <- melt(collated, id=c("participant","condition"))
ggplot(Molten, aes(x=variable, y=vaue, colour = participant)) + geom_line()
ggplot(Molten, aes(x=variable, y=value, colour = participant)) + geom_line()
ggplot(Molten, aes(x=variable, y=value, colour = participant)) + geom_line()
ggplot(Molten, aes(x=variable, y=value, colour = participant)) + geom_line() + geom_point()
ggplot(Molten, aes(x=variable, y=value, colour = condition)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour = condition)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour = condition)) + geom_line(aes(group=1)) + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour = condition)) + geom_line(aes(group=10)) + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour = condition)) + geom_line(aes(group=5)) + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, group= condition)) + geom_line(aes(group=5)) + geom_point()
Molten$condition = as.factor(Molten$condition)
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line(aes(group=5)) + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=participant)) + geom_line() + geom_point()
Molten$participant = as.factor(Molten$participant)
ggplot(data=Molten, aes(x=variable, y=value, colour=participant)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=participant, group=participant)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=condition, group=coindition)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=condition, group=condition)) + geom_line() + geom_point()
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
Molten$condition = as.integer(Molten$condition)
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
$tree = Molten[which(Molten$condition < 3 | Molten$condition == 4)]
tree <- Molten[which(Molten$condition < 3 | Molten$condition == 4)]
tree <- Molten[which(Molten$condition < 3),]
tree <- Molten[which(Molten$condition < 3 | Molten$condition == 4),]
tree <- Molten[which(Molten$condition  == 1 | Molten$condition == 3 | Molten$condition == 5),]
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
tree$condition[tree$condition == 4] <- 3
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
tree <- Molten[which(Molten$condition < 3 | Molten$condition == 4),]
tree$condition[tree$condition == 4] <- 3
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
tree$condition <- as.factor(tree$condition)
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point()
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_brewer()
ggplot(data=tree, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_brewer(palette="BuPu")
Molten$condition = as.factor(Molten$condition)
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_brewer(palette="BuPu")
Molten$condition[Molten$condition == 1] <- "No support"
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_brewer(palette="BuPu")
Molten <- melt(collated, id=c("participant","condition"))
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(palette="BuPu")
Molten$condition = as.factor(Molten$condition)
Molten$participant = as.factor(Molten$participant)
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(palette="BuPu")
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(c("#000000","#000000","#000000","#000000","#000000"))
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(values=c("#000000","#000000","#000000","#000000","#000000"))
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(values=c("#000000","#000000","#000000","#904598","#520D44"))
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(values=c("#9DD8A2","#FF8E5E","#E4321B","#904598","#520D44"))
ggplot(data=Molten, aes(x=variable, y=value, colour=condition)) + geom_line() + geom_point() + scale_colour_manual(values=c("#FFC7C1","#FF8E5E","#E4321B","#904598","#520D44"))
data <- read.csv("collated_binary.csv")
data3 <- read.csv("bcollated3.csv")
data5 <- read.csv("bcollated5.csv")
data125 <- read.csv("bcollated124.csv")
data125 <- read.csv("bcollated124.csv")
data135 <- read.csv("bcollated135.csv")
data124 <- read.csv("bcollated124.csv")
data3 <- read.csv("bcollated3.csv")
data5 <- read.csv("bcollated5.csv")
data124 <- read.csv("bcollated124.csv")
data135 <- read.csv("bcollated135.csv")
cor.test(data3$condition, data3$total.balance, method="spearman")
cor.test(data124$condition, data124$total.balance, method="spearman")
cor.test(data135$condition, data135$total.balance, method="spearman")
cor.test(data3$condition, data3$total.balance, method="spearman")
cor.test(data124$condition, data124$total.balance, method="spearman")
cor.test(data135$condition, data135$total.balance, method="spearman")
shapiro.test(data5$total.balance)
qqnorm(data5$total, ylab="Number of design elements")
qqline(data5$total, col=2, probs=c(0.1,0.9))
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
colours5 <- c("thistle", "springgreen1", "springgreen4", "steelblu
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
colours5 <- c("thistle", "springgreen1", "springgreen4", "steelblue1", "steelblue4")
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
fred <- function(x,i) mean(x[i,7])
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
fred <- function(x,i) mean(x[i,7])
a <- boot.ci(boot(data5[data5$condition==1,], fred, R=1000,))
b <- boot.ci(boot(data5[data5$condition==2,], fred, R=1000,))
c <- boot.ci(boot(data5[data5$condition==3,], fred, R=1000,))
d <- boot.ci(boot(data5[data5$condition==4,], fred, R=1000,))
e <- boot.ci(boot(data5[data5$condition==5,], fred, R=1000,))
print(a$normal)
print(b$normal)
print(c$normal)
print(d$normal)
print(e$normal)
cor.test(data3$condition, data3$total.balance, method="spearman")
cor.test(data124$condition, data124$total.balance, method="spearman")
data3 <- read.csv("b10collated_3.csv")
data5 <- read.csv("b10collated_5.csv")
data124 <- read.csv("b10collated_124.csv")
data135 <- read.csv("b10collated_135.csv")
# Spearman again because condition is still ordinal
cor.test(data3$condition, data3$total.balance, method="spearman")
cor.test(data124$condition, data124$total.balance, method="spearman")
cor.test(data135$condition, data135$total.balance, method="spearman")
shapiro.test(data5$total.balance)
qqnorm(data5$total, ylab="Number of design elements")
qqline(data5$total, col=2, probs=c(0.1,0.9))
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
data3 <- read.csv("b1_3.csv")
data5 <- read.csv("b1_5.csv")
data124 <- read.csv("b1_124.csv")
data135 <- read.csv("b1_135.csv")
cor.test(data3$condition, data3$total.balance, method="spearman")
cor.test(data3$condition, data3$total, method="spearman")
cor.test(data124$condition, data124$total, method="spearman")
cor.test(data135$condition, data135$total, method="spearman")
shapiro.test(data5$total)
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
colours5 <- c("thistle", "springgreen1", "springgreen4", "steelblue1", "steelblue4")
ggplot(data5, aes(x=factor(condition), y=total.balance)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
ggplot(data5, aes(x=factor(condition), y=total)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
data3 <- read.csv("b10_3.csv")
data5 <- read.csv("b10_5.csv")
data124 <- read.csv("b10_124.csv")
data135 <- read.csv("b10_135.csv")
cor.test(data3$condition, data3$total, method="spearman")
cor.test(data124$condition, data124$total, method="spearman")
cor.test(data135$condition, data135$total, method="spearman")
shapiro.test(data5$total)
ggplot(data5, aes(x=factor(condition), y=total)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Balance score")
setwd("/Applications/XAMPP/htdocs/htdocs/thesis_stuff/study2/analysis/novelty")
data3 <- read.csv("new_3.csv")
data5 <- read.csv("new_5.csv")
data124 <- read.csv("new_124.csv")
data135 <- read.csv("new_135.csv")
colours3 <- c("thistle", "wheat", "tomato")
colours5 <- c("thistle", "springgreen1", "springgreen4", "steelblue1", "steelblue4")
ggplot(data5, aes(x=factor(condition), y=level)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
cor.test(data3$condition, data3$new, method="spearman")
cor.test(data124$condition, data124$new, method="spearman")
cor.test(data135$condition, data135$new, method="spearman")
shapiro.test(data5$new)
qqnorm(data5$new, ylab="New concepts")
qqline(data5$new, col=2, probs=c(0.1,0.9))
qqnorm(data5$new, ylab="New concepts")
qqline(data5$new, col=2, probs=c(0.1,0.9))
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="New design elements")
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="New design elements")
#fred <- function(x,i) mean(x[i,3])
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="New design elements")
ggplot(data5, aes(x=factor(condition), y=new)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="New design elements")
#fred <- function(x,i) mean(x[i,3])
data4 <- read.csv("workload_3.csv")
setwd("/Applications/XAMPP/htdocs/htdocs/thesis_stuff/study2/analysis/workload")
data5 <- read.csv("workload_5.csv")
data4 <- read.csv("workload_3.csv")
data3 <- read.csv("workload_3.csv")
data3 <- read.csv("workload_3.csv")
data124 <- read.csv("workload_124.csv")
data135 <- read.csv("workload_135.csv")
colours3 <- c("thistle", "wheat", "tomato")
colours5 <- c("thistle", "springgreen1", "springgreen4", "steelblue1", "steelblue4")
cor.test(data3$condition, data3$tlx_Score, method="spearman")
cor.test(data124$condition, data124$level, method="spearman")
cor.test(data124$condition, data124$tlx_Score, method="spearman")
data124 <- read.csv("workload_124.csv")
cor.test(data124$condition, data124$tlx_Score, method="spearman")
cor.test(data3$condition, data3$tlx_Score, method="spearman")
cor.test(data135$condition, data135$level, method="spearman")
cor.test(data135$condition, data135$txl_Score, method="spearman")
cor.test(data135$condition, data135$tlx_Score, method="spearman")
shapiro.test(data5$tlx_Score)
data5 <- read.csv("workload_5.csv")
shapiro.test(data5$tlx_Score)
qqnorm(data5$tlx_Score, ylab="TLX Score")
qqline(data5$tlx_Score, col=2, probs=c(0.1,0.9))
cor.test(data3$condition, data3$workloadWeighted_mental, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_mental, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_mental, method="spearman")
shapiro.test(data5$workloadWeighted_mental)
cor.test(data3$condition, data3$workloadWeighted_physical, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_physical, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_physical, method="spearman")
shapiro.test(data5$workloadWeighted_physical)
qqnorm(data5$workloadWeighted_physical, ylab="TLX Score")
qqline(data5$workloadWeighted_physical, col=2, probs=c(0.1,0.9))
qqline(data5$workloadWeighted_physical, col=2, probs=c(0.1,0.9))
qqnorm(data5$tlx_Score, ylab="TLX Score")
qqline(data5$tlx_Score, col=2, probs=c(0.1,0.9))
qqnorm(data5$workloadWeighted_physical, ylab="TLX Score")
qqline(data5$workloadWeighted_physical, col=2, probs=c(0.1,0.9))
qqnorm(data5$workloadWeighted_mental, ylab="TLX Score")
qqline(data5$workloadWeighted_mental, col=2, probs=c(0.1,0.9))
qqnorm(data5$workloadWeighted_physical, ylab="TLX Score")
qqline(data5$workloadWeighted_physical, col=2, probs=c(0.1,0.9))
qqline(data5$workloadWeighted_physical, col=2, probs=c(0,1))
qqnorm(data5$tlx_Score, ylab="TLX Score")
qqline(data5$tlx_Score, col=2, probs=c(0.1,0.9))
cor.test(data3$condition, data3$workloadWeighted_temporal, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_temporal, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_temporal, method="spearman")
shapiro.test(data5$workloadWeighted_temporal)
qqnorm(data5$workloadWeighted_temporal, ylab="TLX Score")
qqline(data5$workloadWeighted_temporal, col=2, probs=c(0.1,0.9))
cor.test(data3$condition, data3$workloadWeighted_perform, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_perform, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_perform, method="spearman")
shapiro.test(data5$workloadWeighted_perform)
qqnorm(data5$workloadWeighted_perform, ylab="TLX Score")
qqline(data5$workloadWeighted_perform, col=2, probs=c(0.1,0.9))
cor.test(data3$condition, data3$workloadWeighted_effort, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_effort, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_effort, method="spearman")
shapiro.test(data5$workloadWeighted_effort)
qqnorm(data5$workloadWeighted_effort, ylab="TLX Score")
qqline(data5$workloadWeighted_effort, col=2, probs=c(0.1,0.9))
cor.test(data3$condition, data3$workloadWeighted_frustration, method="spearman")
cor.test(data124$condition, data124$workloadWeighted_frustration, method="spearman")
cor.test(data135$condition, data135$workloadWeighted_frustration, method="spearman")
shapiro.test(data5$workloadWeighted_frustration)
ggplot(data5, aes(x=factor(condition), y=workloadWeighted_frustration)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
ggplot(data5, aes(x=factor(condition), y=workloadWeighted_perform)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
ggplot(data5, aes(x=factor(condition), y=workloadWeighted_temporal)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
ggplot(data5, aes(x=factor(condition), y=workloadWeighted_physical)) + stat_summary(fun.data="mean_cl_boot", geom="crossbar", width=0.3, fill=colours5) + scale_x_discrete(name="Condition",breaks=c(seq(1,5,by=1))) + scale_y_continuous(name="Level of specificity")
tlx1 = data5[ which(data5$condition=1), data$tlx_Score]
tlx1 <- data5[ which(data5$condition=1), data$tlx_Score]
tlx1 <- data5[ which(data5$condition == 1), data$tlx_Score]
tlx1 <- data5[ which(data5$condition == 1), ]
meanOne <- colMeans(one)
one <- data5[ which(data5$condition == 1), ]
meanOne <- colMeans(one)
meanOne <- as.data.frame(colMeans(one))
mean(one$tlx_Score)
mean(four$tlx_Score)
one <- data5[ which(data5$condition == 1), ]
two <- data5[ which(data5$condition == 2), ]
three <- data5[ which(data5$condition == 3), ]
four <- data5[ which(data5$condition == 4), ]
five <- data5[ which(data5$condition == 5), ]
mean(one$tlx_Score)
mean(four$tlx_Score)
mean(one$workloadWeighted_effort)
mean(four$workloadWeighted_effort)
mean(five$workloadWeighted_effort)
mean(two$workloadWeighted_frustration)
mean(four$workloadWeighted_frustration)
