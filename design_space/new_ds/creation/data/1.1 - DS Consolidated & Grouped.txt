C Functional

D Discoverability 2
	O Text-based search 2
	O Browsing mashups by structural properties 2
	O Simple categorisation of mashup elements 2
	D Suggestions
		O Context-specific suggestions 2
		O Feature prompts 6	
D Mashup type 5
 	O Data mashup 3,5,6
	O Logic/process mashup 3,5,6
	D Presentation mashup 5,6
		O UI Customisation 3
		O Automatic UI Generation 2
		O Selecting & customising UI 2
		O Visual UI composition 2
		O Textual UI composition 2
		O Advanced UI generation 3
D SC Lifecycle
	D Inception 4
		O Feasibility 4
		O Project planning 4
	D Analysis 4
		O Domain 4
		O Activity 4
	D Specification 4
		O Needs 4
		D Requirements 4
			O QoS requirements 4,9
		D Specified by 4,9
			O Users 9
			O Application developers 9
		D Specified at 9
			O Runtime specification 9
			O Development time 9
		D Specified in 9
			O User interaction 9
			O Specification Configuration 9
			O Source code 9
		D Specification implicitness 9
			O Implicit specification 9
			O Explicit specification 9
	D Realisation 4
		O Discover 4
		O Design 4
		D Construct 4
			O Mashup and widget configuration 2
		O Verify 4
		D Validate 4
			D Evaluation 9
				O Scenario 9
				O Performance 9
				O Example 9
				O Usability 9
		D Software engineering techniques 2
			O Debugging output 2
			O Version control 2
			O Testing 2
			O Change Request Management 2
	D Provisioning 4
		O Annotation 4
		O Deployment 4
	D Management 4
		O Monitoring 4
		O Adaptation 4
	D Deployment/execution 8
		O Code generation 8
		O Intepretation 8
		O Compilation 8

C Non-Functional

D Representation
	D Mashup technique 3
		O Wire paradigm 1,3,7,8
		O Spreadsheet representation 1,3,7
		D Visual Language representation
			O Visual data flow languages representation 2
			O Visual workflow/process oriented languages representation 2
		O Dialog-based wiring of widgets representation 2
		D Textual DSL representation
			O Textual DSL in text editor 2
			O Textual DSLs as dialog fields 2
		D Full language representation
			O Script/language-based 3
D (Domain) Specificity 1
	O Generic 1
	O Specialised 1
D Interaction technique 1
	O Editable example 1
	O Form-based 1
	O PbD 1,3,7,10
	O Programming by example 2
	O Spreadsheets 1,3,7
	O Web Page customisation 3
	D Textual DSL 1
		O Textual DSL editors 2
		O Textual DSLs in Dialog fields 2
	D Visual language 1,2,6
		O Visual data flow languages 2
		O Visual workflow/process oriented languages 2
		O Iconic 1
	O WYSIWYG 1
	O Dialog-based wiring of widgets 2,6,10
	D Full language
		O Scripting language 7
		O Programming environment 6,7,8
	O Drag-and-drop 8
	O Live composition 8	
D Control flow Plicitness 1
	O Implicit control flow 1
	O Explicit control flow 1
D Learning support 2
	O Tutorials, Help, API documentation 2
	O Discussion forums 2
	O Using shared artefacts as Examples 2
	O Context-specific suggestions as Examples 2
D Community features 2
	D Shareability & reuse 6,2
		O Mashups 2,6
		O Mashup elements 2
	O Tagging 2
	O Rating 2
	O Community forums 2
	O Artefact-centred discussion 2
	O Social networks 2
	D Online Community
		O Private 1
		O Public 1
	D Collaboration 1
		O Blackboard 1
		O Fork & Edit 1
		O Wiki 1
D Usability features 3
	D Learning curve 3
		O Low 3,6
		O Low-medium 3
		O Medium 3,6
		O Medium-high 3
		O High 3,6
		O Incremental programming paradigms 6
	O Incompatibility prompts 3
	O Tutorials 3
	O User requirements 3
	O User goals 3
D User
	D Target user group 3
		O Enterprise oriented 3,6
		O Consumer oriented 3,6
	D User types 5
		O Casual users 5,6,7
		O Power users 5,7
		O Developers 5,7
	D Programming skill requirement 6
		O Non-programmer 1,6,8
		O Average 1,6
		O Expert 1,6,8

C Structural

D Automation degree 1,7
	O Full-automation 1,7
	O Semi-automation 1,7
	O Manual creation 7
D Tool type 3
	O Framework 3
	O Mashup creation tool 3
	O Platform 6
D Liveness 1
	O Level 1 1
	O Level 2 1
	O Level 3 1
	O Level 4 1
D Technology	
	D Communication protocol 3
		O SOAP 3,8
		O REST 3,8
	D Data retrieval strategy 3
		O DOM 3,10
		O Widget 3,6,10
		O RDF 10
		O Tag 10
		O Other 3
	D Syndication format 3
		O RSS 3,8
		O ATOM 3,8
	D Implementation language 8
		O JavaScript 8
		O Additional 8
	D Data format 8
		O XML 8
		O JSON 8
		O Parameter-value pairs 8
	D Description 8
		O WSDL 8
		O WADL 8
		O Proprietary description 8
		O No description 8
D Architecture 6
	O Client mashup 6
	O Server mashup 6
D Application Type
	O Personal web portal 6
	O Software application 6
	O Browser based tools widgets 6
	O Toolbars 6
	O Virtual browser 6
	O Extension client to Firefox 6
D Internal component model 8
	O Native model 8
	O Abstract model 8
D Composition logic 8
	O Configuration 8
	O Event-based 8
	O Control flow 8
	O Data flow 8
	O Blackboard-based 8
D Layout logic 8
	O Predefined templates 8
	O Customisable templates 8
	O Custom layouts 8
	O Screen/page flow 8
D Output types 8
	O Data service 8
	O Application service 8
	O Web application 8
D Minimum device for framework 9
	O Server (framework) 9
	O PDA (framework) 9
	O J2SE (framework) 9
D Minimum device for service 9
	O PDA (service) 9
	O Mote (service) 9
D Infrastructure 9
	O Fixed 9
	O Ad hoc 9
D Topology 9
	O Centralised 9
	O Decentralised 9
D Source modelling 10
	O Manual source modelling 10
	O Tag source modelling 10
	O Database 10
D Data integration 10
	O Manual data integration 10
	O Join only 10
	O Union only 10
	O Widgets 10
D Data cleaning 10
	O Manual data cleaning 10
	O Tag data cleaning 10
D Mashup type supported 10
	O One simple source 10
	O Two or more sources 10
	O One source with a form 10
	O Combining two or more using DB join 10
	O ETL data migration to SQL 6
D Reuse
	O Component repository 8
	O Composition repository 8
	O Automatic reuse of data extractors 2
D Extensions
	O Extension APIs 2,6
D Platform choice
	O Multi-platform support 8
	O Desktop 6
D Contingency management 9
	O Automatic 9,8
	O None 9
	O Runtime 9
	O Detection 9